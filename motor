const int IN1 = 8;  // Bobina A+
const int IN2 = 9;  // Bobina A-
const int IN3 = 10; // Bobina B+
const int IN4 = 11; // Bobina B+

// Sequência em modo onda completa (1 passo por vez)
int steps[4][4] = {
  {1, 0, 1, 0}, // Passo 1
  {0, 1, 1, 0}, // Passo 2
  {0, 1, 0, 1}, // Passo 3
  {1, 0, 0, 1}  // Passo 4
};

// Configurações do motor
const int passosPorRevolucao = 48; // 48 passos = 360° (7.5° por passo)
int currentStep = 0;
int anguloAtual = 0;
int incrementoAngulo = 360; // Coleta a cada 30°
int contagem = 0;

void setup() {
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  if ((anguloAtual < 360) && (contagem < 10)) {
    // Calcula quantos passos para o incremento desejado
    int passosNecessarios = (incrementoAngulo * passosPorRevolucao) / 360;
    
    // Executa os passos
    for (int i = 0; i < passosNecessarios; i++) {
      setStep(currentStep);
      currentStep = (currentStep + 1) % 4;
      delay(50); // Ajuste para velocidade desejada
    }
    
    // Atualiza ângulo e coleta dado
    Serial.println(anguloAtual);
    anguloAtual += incrementoAngulo;
    
    
    // Envia para o Python: "ângulo,valor"
    
    
    delay(500); // Espera para estabilização
  } else {
    // Reinicia após 360°
    anguloAtual = 0;
    contagem += 1;
    int valorSensor = analogRead(A0);
    Serial.print("Intensidade : ");
    Serial.println(valorSensor);
    Serial.println("Fim do ciclo");
    delay(2000);
  }
}

void setStep(int stepIndex) {
  digitalWrite(IN1, steps[stepIndex][0]);
  digitalWrite(IN2, steps[stepIndex][1]);
  digitalWrite(IN3, steps[stepIndex][2]);
  digitalWrite(IN4, steps[stepIndex][3]);
}
